<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.springframework</groupId>
    <artifactId>gs-consuming-rest</artifactId>
    <version>0.1.0</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.2.6.RELEASE</version>
    </parent>

    <packaging>war</packaging>

    <properties>
        <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--You need to exclude tomcat-embed-websocket to avoid the error,
            ClassCastException: org.apache.tomcat.websocket.server.WsServerContainer cannot
            be cast to io.undertow.websockets.jsr.ServerWebSocketContainer-->
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat.embed</groupId>
                    <artifactId>tomcat-embed-websocket</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
    </dependencies>


    <build>
        <finalName>gs-consuming-rest</finalName>
        <plugins>
            <!--The Spring Boot Maven plugin provides many convenient features:

            - It collects all the jars on the classpath and builds a single, runnable "über-jar",
                which makes it more convenient to execute and transport your service.
            - It searches for the public static void main() method to flag as a runnable class.
            - It provides a built-in dependency resolver that sets the version number to match
                Spring Boot dependencies. You can override any version you wish, but it will default
                to Boot’s chosen set of versions.
            -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- The WildFly plugin deploys your war to a local WildFly container -->
            <!-- To use, run: mvn package wildfly:deploy -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.wildfly.maven.plugin}</version>
            </plugin>
        </plugins>
    </build>

</project>
